This file is meant to explain some of the Python's syntax. It is not a Python
course, but should be sufficient to understand this program if you have already
used another Object Oriented language (Java, C++, ...).

===============================================================================

if variable:

It is roughly equivalent to:
"if variable is not None or variable != [] or variable != "" or variable != 0"
In other words, "if variable contains information".

===============================================================================

try:
    instructions1
except nameOfException as name:
    instructions2

Executes the block instructions1. If there is a problem, and if this problem is
named nameOfException, it will not stop the program (as it is supposed to do),
but it will execute the instructions2 instead.
Example:
```
>>> 1/0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ZeroDivisionError: division by zero
```
The program will stop, but with:
```
>>> try:
     1/0
except ZeroDivisionError as error:
    print("I will continue to work even after a", error)
```
The program will print:
```
I will continue to work even after a division by zero
```

This is useful if one is not sure about what can happen during the execution
of the program. (eg: user input, api call, ...)

===============================================================================

@deadline(3):

When a "@" is put before a function, the function acts as a decorator.
This is a complicated topic, you should take a look at a Python course to
understand.
