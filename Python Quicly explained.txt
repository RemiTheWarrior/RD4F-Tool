This file is meant to explained some of Python's syntax. It is not a Python
course, but shoulb be sufficient to understand this program if you have already
used another Object Oriented language (Java, c++, ...).

===============================================================================

if variable:

It is roughly equivalent to:
"if variable is not None or variable != [] or variable != "" or variable != 0"
In other word, "if variable contains informations".

===============================================================================

try:
    instructions1
except nameOfException as name:
    instructions2

Execute the block instructions1. If ther is a problem, and if this problem is
named nameOfException, it will not stop the program (as it is supposed to do,
but it will execute the instructions2 instead.)
Exemple:
```
>>> 1/0
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ZeroDivisionError: division by zero
```
The program will stop. But with:
```
>>> try:
     1/0
except ZeroDivisionError as error:
    print("I will continue to work even after a", error)
```
The program will print:
```
I will continue to work even after a division by zero
```

This is usefull if one is not sure about what can happen during the execution
of the program. (eg: user input, api call, ...)

===============================================================================

@deadline(3):

When a "@" is put before a function, the function act as a decorator.
This is a complicated topic, you should take a look at a Python course to
understand.
